Usage:
        ./nedc_mladp_run.py -p <Parameter file>

Parameter File:

# version=param_v1.0.0

run_pipeline{

	# Set to 1 to execute the whole pipeline
	run=1

	# This is where everything will output
	output_directory="/data/isip/exp/tuh_dpath/exp_0288/Machine-Learning-Applications-In-Digital-Pathology/nedc_mladp/data/example_output"
}

gen_feats{

        # Set window and frame width and height
        window_width=500
        window_height=500
        frame_width=250
        frame_width=250

        # Set to a txt file where each new line is the absolute path to a svs file
        image_files_list="/data/isip/exp/tuh_dpath/exp_0288/Machine-Learning-Applications-In-Digital-Pathology/example_images.list"

        # Set to a txt file where each new line is the absolute path to the corresponding xml file of the svs files above
        annotation_files_list="/data/isip/exp/tuh_dpath/exp_0288/Machine-Learning-Applications-In-Digital-Pathology/nedc_mladp/example_annotations.list"

        # 1 to write feature files 0 to not write features
        write_features=1

        # Set minimum amount windows must overlap with a annotated region before they are considered a labelled frame
        window_region_overlap_threshold=.5


        ## Begin of if fitting PCA

        # 0 if trained PCA doesn't exist
        existing_PCA=0

        # Number of components for PCA to train on
        PCA_components=2

        # Amount to compress exported PCA
        PCA_compression=0

        ## End of if fitting PCA


        ## Begin of if trained PCA does exist

        #PCA_path="some_path/PCA.joblib"

        ## End of it trained PCA does exist


}


train_model{

        # Declare model type, currently have RNF, QDA, SVM
        model_type="RNF"

        # 1 to write model, 0 if not
        write_model=1

        # How much to compress model when writing
        compression=0

}

gen_preds {

          # 1 to write frame or region decisions, 0 to not
          write_frame_decisions=1
          write_region_decisions=1
	  
}
